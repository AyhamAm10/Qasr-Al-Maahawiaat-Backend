openapi: 3.0.0
info:
  title: Orders API
  description: API for managing orders, including creating, retrieving, updating, and deleting orders.
  version: 1.0.0
servers:
  - url: http://localhost:8800/api
    description: Development server

tags:
  - name: Orders
    description: Operations related to orders

paths:
  /orders:
    get:
      tags:
        - Orders
      summary: Get orders with pagination
      description: Retrieve a list of orders with pagination support.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: The page number to retrieve.
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: The number of orders to retrieve per page.
      responses:
        200:
          description: A list of orders with pagination metadata.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Total number of orders.
                  page:
                    type: integer
                    description: Current page number.
                  limit:
                    type: integer
                    description: Number of items per page.
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        500:
          description: Internal server error.

    post:
      tags:
        - Orders
      summary: Add a new order
      description: Create a new order with associated products.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrderRequest'
      responses:
        201:
          description: Order created successfully.
        500:
          description: Internal server error.

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get an order by ID
      description: Retrieve details of a specific order by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the order to retrieve.
      responses:
        200:
          description: Order details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Order not found.
        500:
          description: Internal server error.

    put:
      tags:
        - Orders
      summary: Update an order
      description: Update the details of an existing order.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the order to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
      responses:
        200:
          description: Order updated successfully.
        404:
          description: Order not found.
        500:
          description: Internal server error.

    delete:
      tags:
        - Orders
      summary: Delete an order
      description: Delete a specific order by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The ID of the order to delete.
      responses:
        200:
          description: Order deleted successfully.
        404:
          description: Order not found.
        500:
          description: Internal server error.

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
        delivery_fee:
          type: number
          format: double
        valet:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        total:
          type: number
          format: double
        order_type:
          type: string
          enum: [delivery, takeaway, dine_in]
        table_number:
          type: integer
          nullable: true
        lat:
          type: number
          format: double
          nullable: true
        long:
          type: number
          format: double
          nullable: true
        phone_number:
          type: string
          nullable: true
        take_away_time:
          type: string
          format: time
          nullable: true
        street_address:
          type: string
          nullable: true
        building_name:
          type: string
          nullable: true
        apartment_number:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        orderProduct:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'

    OrderProduct:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        variation:
          type: string
          nullable: true
        product_count:
          type: integer
        product_price:
          type: number
          format: double

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        image_url:
          type: string
        details:
          type: string
          nullable: true
        base_price:
          type: number
          format: double
        offer_price:
          type: number
          format: double
          nullable: true

    AddOrderRequest:
      type: object
      properties:
        delivery_fee:
          type: number
          format: double
        valet:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        total:
          type: number
          format: double
        order_type:
          type: string
          enum: [delivery, takeaway, dine_in]
        table_number:
          type: integer
          nullable: true
        lat:
          type: number
          format: double
          nullable: true
        long:
          type: number
          format: double
          nullable: true
        phone_number:
          type: string
          nullable: true
        take_away_time:
          type: string
          format: time
          nullable: true
        street_address:
          type: string
          nullable: true
        building_name:
          type: string
          nullable: true
        apartment_number:
          type: string
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'

    UpdateOrderRequest:
      type: object
      properties:
        delivery_fee:
          type: number
          format: double
        valet:
          type: number
          format: double
        subtotal:
          type: number
          format: double
        total:
          type: number
          format: double
        order_type:
          type: string
          enum: [delivery, takeaway, dine_in]
        table_number:
          type: integer
          nullable: true
        lat:
          type: number
          format: double
          nullable: true
        long:
          type: number
          format: double
          nullable: true
        phone_number:
          type: string
          nullable: true
        take_away_time:
          type: string
          format: time
          nullable: true
        street_address:
          type: string
          nullable: true
        building_name:
          type: string
          nullable: true
        apartment_number:
          type: string
          nullable: true
